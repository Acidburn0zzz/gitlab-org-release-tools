## Preparation

- Preparation MR's should already be created
- [ ] [Ensure any backports targeting] <%= version %> are merged to their stable counter part
  - [ ] [EE Backports](https://gitlab.com/gitlab-org/gitlab/merge_requests?scope=all&utf8=%E2%9C%93&state=opened&target_branch=<%= version.stable_branch(ee: true) %>)
  - [ ] [Omnibus EE](https://gitlab.com/gitlab-org/omnibus-gitlab/merge_requests?scope=all&utf8=%E2%9C%93&state=opened&target_branch=<%= version.stable_branch(ee: true) %>)
- [ ] Perform automated merging into the preparation branches:
    ```sh
    # In Slack
    /chatops run release merge <%= version.to_ce %>
    ```
- [ ] Merge the preparation branches
- [ ] For `omnibus-gitlab` add the changes to the stable branches: cherry-pick [remaining merge requests] directly into the stable branch.
- Check the following list of critical issues/MRs which are to be included in `<%= version %>`.
  - [ ] REFERENCE_TO_MR_TO_PICK
- [ ] Ensure builds are green on [Omnibus]

[Ensure any backports targeting]: https://gitlab.com/gitlab-org/release/docs/blob/master/general/faq.md#backports-for-prior-versions
[preparation MRs]: https://gitlab.com/gitlab-org/release/docs/blob/master/general/picking-into-merge-requests.md
[remaining merge requests]: https://gitlab.com/gitlab-org/omnibus-gitlab/merge_requests?scope=all&utf8=%E2%9C%93&state=merged&label_name[]=Pick%20into%20<%= version.to_minor %>
[Omnibus]: https://gitlab.com/gitlab-org/omnibus-gitlab/commits/<%= version.stable_branch %>

## Packaging

- [ ] [Check if mirroring synced stable branches to dev](https://gitlab.com/gitlab-org/release/docs/blob/master/general/push-to-multiple-remotes.md)
    - [ ] [CE](https://dev.gitlab.org/gitlab/gitlabhq/commits/<%= version.stable_branch %>)
    - [ ] [EE](https://dev.gitlab.org/gitlab/gitlab-ee/commits/<%= version.stable_branch(ee: true) %>)
    - [ ] [Omnibus](https://dev.gitlab.org/gitlab/omnibus-gitlab/commits/<%= version.stable_branch %>)
- [ ] Tag `<%= version %>`:

  ```sh
  # In Slack:
  /chatops run release tag <%= version %>
  ```
- [ ] While waiting for packages to build, now is a good time to [prepare the blog post]. Look at previous MRs for examples. => BLOG_POST_MR
- [ ] Check progress of [EE packages build](https://dev.gitlab.org/gitlab/omnibus-gitlab/commits/<%= version.to_omnibus(ee: true) %>) and [CE packages build](https://dev.gitlab.org/gitlab/omnibus-gitlab/commits/<%= version.to_omnibus(ee: false) %>).
    - This might take a while (around 80 min).
    - We only need the EE packages to finish to continue with next steps.


[prepare the blog post]: https://about.gitlab.com/handbook/marketing/blog/release-posts/#release-posts

## Deploy

For patch releases, the only available environment for deploys is `pre.gitlab.com`. All GitLab Inc. team members can login to that installation using their email address (through google oauth).

### pre.gitlab.com

Deployments to pre.gitlab.com are performed automatically. If you need to
manually run a deployment, you can do so as follows:

```sh
# In Slack:
/chatops run deploy <%= version %>-ee.0 --pre
```

#### QA

The [QA task issue](https://gitlab.com/gitlab-org/release/tasks/issues?label_name%5B%5D=QA+task)
is generated automatically when deploying to staging. If you need to
manually generate the QA task, you can do so as follows:

```sh
# In Slack, replacing LAST_DEPLOYED_VERSION with the appropriate value:
/chatops run release qa vLAST_DEPLOYED_VERSION v<%= version %>
```

## Release

- [ ] Publish the packages via ChatOps:
  ```
  # In Slack:
  /chatops run publish <%= version %>
  ```
- [ ] Verify that packages appear on `packages.gitlab.com`: [EE](https://packages.gitlab.com/gitlab/gitlab-ee) / [CE](https://packages.gitlab.com/gitlab/gitlab-ce)
- [ ] Verify that Docker images appear on `hub.docker.com`: [EE](https://hub.docker.com/r/gitlab/gitlab-ee/tags) / [CE](https://hub.docker.com/r/gitlab/gitlab-ce/tags)
- [ ] Create the `<%= version %>` version on [version.gitlab.com](https://version.gitlab.com/versions/new?version=<%= version %>)
- [ ] Deploy the blog post
- [ ] In the `#content-updates` channel, share a link to the blog post:

    ```
    :tada: GitLab <%= version %> has been released: BLOG_POST_URL
    ```

## References

### gitlab.com

- https://gitlab.com/gitlab-org/gitlab-foss/commits/<%= version.stable_branch %>
- https://gitlab.com/gitlab-org/gitlab/commits/<%= version.stable_branch(ee: true) %>
- https://gitlab.com/gitlab-org/omnibus-gitlab/commits/<%= version.stable_branch %>

### dev.gitlab.org

- https://dev.gitlab.org/gitlab/gitlabhq/commits/<%= version.stable_branch %>
- https://dev.gitlab.org/gitlab/gitlab-ee/commits/<%= version.stable_branch(ee: true) %>
- https://dev.gitlab.org/gitlab/omnibus-gitlab/commits/<%= version.stable_branch %>

/milestone %"<%= version.to_minor %>"
/due in 7 days
