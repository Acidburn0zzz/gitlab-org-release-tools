### <%= ordinal_date(15) %>: (15 working days before the 22nd)

#### RC1

- [ ] Ensure `omnibus-gitlab` is ready to build packages by asking the Omnibus maintainers
- Follow the [Creating RC1] guide:
  - [ ] Update the "Installation from Source" guide
  - [ ] Create the Update guides
  - [ ] Run `bin/rake gitlab:update_templates` and open a merge request to master
  - [ ] Merge [GitLab CE into EE] via merge request: LINK_TO_CE_EE_MR
  - [ ] Check for any problematic migrations in EE (EE migrations include CE ones), and paste the diff in a snippet: `git diff LATEST_PATCH_TAG-ee..master -- db/migrate` =>
  - [ ] Sync CE, EE, and Omnibus to `dev`
  - [ ] In `#core`:

        ```
        @channel

        I am about to tag `<%= version.to_rc %>`. Everything merged into `master`
        after this point will go into next release. Only regressions and security fixes
        will be cherry-picked into `<%= version.stable_branch %>`.
        
        Please ensure that the correct milestone is set (`<%= version.to_minor %>` for this release)
        and the label `pick into stable` has been added.
        ```

  - [ ] Ensure [tests are green on CE](https://dev.gitlab.org/gitlab/gitlabhq/commits/master)
  - [ ] Ensure [tests are green on EE](https://dev.gitlab.org/gitlab/gitlab-ee/commits/master)
  - [ ] In `#releases`: I'm going to tag `<%= version.to_rc %>`
  - [ ] Tag the `<%= version.to_rc %>` version using the [`release` task]:

        ```sh
        bundle exec rake "release[<%= version.to_rc %>]"
        ```
- [ ] Check that [EE packages are built], [CE packages are built] and appears on `packages.gitlab.com`: [EE & CE](https://packages.gitlab.com/app/gitlab/unstable/search?q=<%= version.to_rc %>)
- [ ] In `#infrastructure`: I'm going to deploy `<%= version.to_rc %>` to staging
- [ ] Deploy [`<%= version.to_rc %>`](https://packages.gitlab.com/gitlab/unstable/packages/ubuntu/xenial/gitlab-ee_<%= version.to_rc %>.ee.0_amd64.deb) to [staging.gitlab.com]
- [ ] In `#infrastructure`: I'm going to deploy `<%= version.to_rc %>` to production
- [ ] Deploy [`<%= version.to_rc %>`](https://packages.gitlab.com/gitlab/unstable/packages/ubuntu/xenial/gitlab-ee_<%= version.to_rc %>.ee.0_amd64.deb) to [GitLab.com]

- [ ] Create the [regression issue] in the CE issue tracker using the [`regression_issue` task] and bookmark it:

      ```sh
      bundle exec rake "regression_issue[<%= version.to_patch %>]"
      ```
- [ ] Prepare the [blog post] using the [`new_release_post` task], in the [`www-gitlab-com` project]:

      ```sh
      bundle exec rake "new_release_post[<%= version.to_minor %>]"
      ```

### Anytime between <%= ordinal_date(15) %> (15 working days before the 22nd) and <%= ordinal_date(4) %> (4 working days before the 22nd)

**Copy-paste the tasks below for any other RCs (be sure to update the RC number).**

```
#### RC2

- [ ] Cherry-pick merge requests labeled [`Pick into Stable`] for the current
  milestone (you can take advantage of the
  [`Pick into Stable` <%= version.to_minor %> merged merge requests] page) into
  the CE `<%= version.stable_branch %>` and EE `<%= version.stable_branch(ee: true) %>`
  branches, respectively
- Follow the [Creating subsequent RCs] guide for `<%= version.to_rc(2) %>`:
  - [ ] Merge CE `<%= version.stable_branch %>` into EE `<%= version.stable_branch(ee: true) %>` following the [Merging a CE stable branch into its EE counterpart] guide
  - [ ] Check for any problematic migrations in EE (EE migrations include CE ones), and paste the diff in a snippet: `git diff v<%= version.to_rc %>-ee..<%= version.stable_branch(ee: true) %> -- db/migrate` =>
  - [ ] Sync CE, EE, and Omnibus to `dev`
  - [ ] Ensure [tests are green on CE]
  - [ ] Ensure [tests are green on EE]
  - [ ] In `#releases`: I'm going to tag `<%= version.to_rc(2) %>`
  - [ ] Tag the `<%= version.to_rc(2) %>` version using the [`release` task]:

        ```sh
        bundle exec rake "release[<%= version.to_rc(2) %>]"
        ```
- [ ] Check that [EE packages are built], [CE packages are built] and appears on `packages.gitlab.com`: [EE & CE](https://packages.gitlab.com/app/gitlab/unstable/search?q=<%= version.to_rc(2) %>)
- [ ] In `#infrastructure`: I'm going to deploy `<%= version.to_rc(2) %>` to staging
- [ ] Deploy [`<%= version.to_rc(2) %>`](https://packages.gitlab.com/gitlab/unstable/packages/ubuntu/xenial/gitlab-ee_<%= version.to_rc(2) %>.ee.0_amd64.deb) to [staging.gitlab.com]
- [ ] In `#infrastructure`: I'm going to deploy `<%= version.to_rc(2) %>` to production
- [ ] Deploy [`<%= version.to_rc(2) %>`](https://packages.gitlab.com/gitlab/unstable/packages/ubuntu/xenial/gitlab-ee_<%= version.to_rc(2) %>.ee.0_amd64.deb) to [GitLab.com]
```

**Only after the <%= ordinal_date(7) %> (7 working days before the 22nd)**

```
- [ ] Tweet about the `<%= version.to_rc(2) %>` release:

      ```
      GitLab <%= version.to_rc(2) %> is available: https://packages.gitlab.com/gitlab/unstable
      Use at your own risk. Please link regressions issues from
      LINK_TO_REGRESSION_ISSUE
      ```
```

### <%= ordinal_date(7) %>: (7 working days before the 22nd)

- [ ] Determine QA person and notify this person: MENTION_THIS_PERSON_HERE
- [ ] Do QA and fix anything coming out of it: LINK_TO_QA_ISSUE

### Anytime between <%= ordinal_date(3) %> (3 working days before the 22nd) and <%= ordinal_date(1) %> (1 working day before the 22nd)

- [ ] In `#core`:

    ```
    @channel

    TL;DR: Ensure the `<%= version.to_patch %>` milestone and the `Pick into Stable` label are set, no need to ping me.

    From now on, please follow the "Change for stable release" process:
    https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#changes-for-stable-releases
    ```

**Copy-paste the tasks below for any other RCs (be sure to update the RC number).**

```
#### RC3

- [ ] Cherry-pick merge requests labeled [`Pick into Stable`] for the current
  milestone (you can take advantage of the
  [`Pick into Stable` <%= version.to_minor %> merged merge requests] page) into
  the CE `<%= version.stable_branch %>` and EE `<%= version.stable_branch(ee: true) %>`
  branches, respectively
- Follow the [Creating subsequent RCs] guide for `<%= version.to_rc(3) %>` (**be sure to use the correct RC number**):
  - [ ] Merge CE `<%= version.stable_branch %>` into EE `<%= version.stable_branch(ee: true) %>` following the [Merging a CE stable branch into its EE counterpart] guide
  - [ ] Check for any problematic migrations in EE (EE migrations include CE ones), and paste the diff in a snippet: `git diff v<%= version.to_rc(2) %>-ee..<%= version.stable_branch(ee: true) %> -- db/migrate` =>
  - [ ] Sync CE, EE, and Omnibus to `dev`
  - [ ] Ensure [tests are green on CE]
  - [ ] Ensure [tests are green on EE]
  - [ ] In `#releases`: I'm going to tag `<%= version.to_rc(3) %>`
  - [ ] Tag the `<%= version.to_rc(3) %>` version using the [`release` task]:

        ```sh
        bundle exec rake "release[<%= version.to_rc(3) %>]"
        ```
- [ ] Check that [EE packages are built], [CE packages are built] and appears on `packages.gitlab.com`: [EE & CE](https://packages.gitlab.com/app/gitlab/unstable/search?q=<%= version.to_rc(3) %>)
- [ ] In `#infrastructure`: I'm going to deploy `<%= version.to_rc(3) %>` to staging
- [ ] Deploy [`<%= version.to_rc(3) %>`](https://packages.gitlab.com/gitlab/unstable/packages/ubuntu/xenial/gitlab-ee_<%= version.to_rc(3) %>.ee.0_amd64.deb) to [staging.gitlab.com]
- [ ] In `#infrastructure`: I'm going to deploy `<%= version.to_rc(3) %>` to production
- [ ] Deploy [`<%= version.to_rc(3) %>`](https://packages.gitlab.com/gitlab/unstable/packages/ubuntu/xenial/gitlab-ee_<%= version.to_rc(3) %>.ee.0_amd64.deb) to [GitLab.com]
- [ ] Tweet about the `<%= version.to_rc(3) %>` release:

      ```
      GitLab <%= version.to_rc(3) %> is available: https://packages.gitlab.com/gitlab/unstable
      Use at your own risk. Please link regressions issues from
      LINK_TO_REGRESSION_ISSUE
      ```
```

### <%= ordinal_date(3) %>: (3 working days before the 22nd)

- [ ] Check that everyone is mentioned on the [blog post] using `@all`:

      ```
      Hello @all, this is the monthly release post that will go out on the 22nd,
      announcing the new GitLab version. Look through it to see if we can make any
      changes and feel free to comment with suggestions or questions!
      ```

      or, if the blog post is still very much a work in progress:

      ```
      Hello @all, this is the merge request for the monthly release post that will
      go out on the 22nd, announcing the new GitLab version. Right now it's all
      boilerplate, but feel free to remind us about things that shouldn't be left
      out!
      ```

### <%= ordinal_date(2) %>: (2 working days before the 22nd)

- [ ] Ask in `#core` for suggestions about who should be this release's MVP.
  Once chosen, add them to the [blog post] and to the [MVP page], in the
  same merge request

### <%= ordinal_date(1) %>: (1 working day before the 22nd)

Ideally, the last RC should be released no later than this day and should point
to the same commit as the final release.

### 22nd before 1900 CET:

- Before 0800 PDT / 1700 CET:
  - [ ] Cherry-pick merge requests labeled [`Pick into Stable`] for the current
    milestone (you can take advantage of the
    [`Pick into Stable` <%= version.to_minor %> merged merge requests] page) into
    the CE `<%= version.stable_branch %>` and EE `<%= version.stable_branch(ee: true) %>`
    branches, respectively
  - [ ] Merge CE `<%= version.stable_branch %>` into EE `<%= version.stable_branch(ee: true) %>` following the [Merging a CE stable branch into its EE counterpart] guide
  - [ ] Check for any problematic migrations in EE (EE migrations include CE ones), and paste the diff in a snippet: `git diff v<%= version.to_rc(3) %>-ee..<%= version.stable_branch(ee: true) %> -- db/migrate` =>
  - [ ] Sync CE, EE, and Omnibus to `dev`
  - [ ] Ensure [tests are green on CE]
  - [ ] Ensure [tests are green on EE]
  - [ ] In `#releases`: I'm going to tag `<%= version.to_patch %>`
  - [ ] Tag the `<%= version.to_patch %>` version using the [`release` task]:

        ```sh
        bundle exec rake "release[<%= version.to_patch %>]"
        ```
  - [ ] Check that [EE packages are built], [CE packages are built] and appears on `packages.gitlab.com`: [EE](https://packages.gitlab.com/app/gitlab/gitlab-ee/search?q=<%= version.to_patch %>) / [CE](https://packages.gitlab.com/app/gitlab/gitlab-ce/search?q=<%= version.to_patch %>)

- Before 0900 PDT / 1800 CET:
  - [ ] In `#infrastructure`: I'm going to deploy `<%= version.to_patch %>` to staging
  - [ ] Deploy [`<%= version.to_patch %>`](https://packages.gitlab.com/gitlab/gitlab-ee/packages/ubuntu/xenial/gitlab-ee_<%= version.to_patch %>-ee.0_amd64.deb) to [staging.gitlab.com]
  - [ ] In `#infrastructure`: I'm going to deploy `<%= version.to_patch %>` to production
  - [ ] Deploy [`<%= version.to_patch %>`](https://packages.gitlab.com/gitlab/gitlab-ee/packages/ubuntu/xenial/gitlab-ee_<%= version.to_patch %>-ee.0_amd64.deb) to [GitLab.com]
  - [ ] Create the `<%= version.to_patch %>` version on https://version.gitlab.com
  - [ ] Create the first patch issue using the [`patch_issue` task]:

      ```sh
      bundle exec rake "patch_issue[<%= version.next_patch %>]"
      ```

- At 1000 PDT / 1900 CET:
  - [ ] Publish the release [blog post]
  - [ ] Ensure someone tweets about the `<%= version.to_patch %>` release

[regression issue]: LINK_TO_REGRESSION_ISSUE
[blog post]: LINK_TO_WIP_BLOG_POST

[Creating RC1]: https://gitlab.com/gitlab-org/release-tools/blob/master/doc/release-candidates.md#creating-rc1
[tests are green on CE]: https://dev.gitlab.org/gitlab/gitlabhq/commits/<%= version.stable_branch %>
[tests are green on EE]: https://dev.gitlab.org/gitlab/gitlab-ee/commits/<%= version.stable_branch(ee: true) %>
[EE packages are built]: https://dev.gitlab.org/gitlab/omnibus-gitlab/commits/<%= version.stable_branch(ee: true) %>
[CE packages are built]: https://dev.gitlab.org/gitlab/omnibus-gitlab/commits/<%= version.stable_branch %>
[`gitlab/unstable`]: https://packages.gitlab.com/gitlab/unstable
[`new_release_post` task]: https://gitlab.com/gitlab-com/www-gitlab-com/#create-release-blog-post
[`www-gitlab-com` project]: https://gitlab.com/gitlab-com/www-gitlab-com/
[`gitlab/gitlab-ee`]: https://packages.gitlab.com/gitlab/gitlab-ee
[`gitlab/gitlab-ce`]: https://packages.gitlab.com/gitlab/gitlab-ce
[Sync CE, EE, and Omnibus to `dev`]: https://gitlab.com/gitlab-org/release-tools/blob/master/doc/pro-tips.md#add-a-git-pdo-and-a-git-pdog-aliases
[Creating subsequent RCs]: https://gitlab.com/gitlab-org/release-tools/blob/master/doc/release-candidates.md#creating-subsequent-rcs
[GitLab CE into EE]: https://gitlab.com/gitlab-org/release-tools/blob/master/doc/merge-ce-into-ee.md#merging-ce-master-into-ee-master
[Merging a CE stable branch into its EE counterpart]: https://gitlab.com/gitlab-org/release-tools/blob/master/doc/merge-ce-into-ee.md#merging-a-ce-stable-branch-into-its-ee-counterpart
[`Pick into Stable`]: https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#changes-for-stable-releases
[`release` task]: https://gitlab.com/gitlab-org/release-tools/blob/master/doc%2Frake-tasks.md#releaseversion
[`patch_issue` task]: https://gitlab.com/gitlab-org/release-tools/blob/master/doc%2Frake-tasks.md#patch_issueversion
[`regression_issue` task]: https://gitlab.com/gitlab-org/release-tools/blob/master/doc%2Frake-tasks.md#regression_issueversion
[MVP page]: https://gitlab.com/gitlab-com/www-gitlab-com/blob/master/source/mvp/index.html
[`Pick into Stable` <%= version.to_minor %> merged merge requests]: https://gitlab.com/groups/gitlab-org/merge_requests?label_name%5B%5D=Pick+into+Stable&milestone_title=<%= version.milestone_name %>&scope=all&sort=id_desc&state=merged
[staging.gitlab.com]: https://dev.gitlab.org/cookbooks/chef-repo/blob/master/doc/deploying.md
[GitLab.com]: https://dev.gitlab.org/cookbooks/chef-repo/blob/master/doc/deploying.md
