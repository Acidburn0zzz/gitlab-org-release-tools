### First working day after 7th

Stable branch should be created after the 7th. The 7th is the last date to reliably get things in.

- [ ] In `#development`:

      ```
      @channel

      I am about to create the `<%= version.stable_branch %>` branch. Everything merged into `master`
      after this point will go into next month's release. Only regression and security fixes
      will be cherry-picked into `<%= version.stable_branch %>`.

      Please ensure that merge requests have the correct milestone (`<%= version.to_minor %>` for this release)
      and the `Pick into Stable` label.

      From now on, please follow the "After the 7th" process:
      https://gitlab.com/gitlab-org/gitlab-ce/blob/master/PROCESS.md#after-the-7th
      ```
- [ ] Create branch `<%= version.stable_branch %>` from CE `master` manually
- [ ] Create branch `<%= version.stable_branch(ee: true) %>` from EE `master` manually
- [ ] In Omnibus create both `<%= version.stable_branch %>` and `<%= version.stable_branch(ee: true) %>` from `master` manually
- [ ] Merge [GitLab CE into EE] on the stable branches
- [ ] Sync CE, EE, and Omnibus to `dev`

#### RC1

- [ ] Ensure `omnibus-gitlab` is ready to build packages by asking the Omnibus maintainers
- Follow the [Creating RC1] guide:
  - [ ] Create MR on CE master updating the "Installation from Source" guide, creating the "Update" guides
  - [ ] Create MR on EE master creating the "CE to EE" guides
  - [ ] Create MR on CE master updating the gitignore and license templates
  - [ ] Create MR on CE master updating the dependencies license list
  - [ ] Ensure above MRs are merged and marked `Pick into Stable` for milestone `<%= version.to_minor %>`
  - [ ] Cherry-pick merge requests labeled [`Pick into Stable`] for the current
    milestone (you can take advantage of the [`Pick into Stable` <%= version.to_minor %> merged merge requests] page) into
    the CE `<%= version.stable_branch %>` and EE `<%= version.stable_branch(ee: true) %>`
    branches, respectively.
  - [ ] Merge CE `<%= version.stable_branch %>` into EE `<%= version.stable_branch(ee: true) %>` following the [Merging a CE stable branch into its EE counterpart] guide
  - [ ] Check for any problematic migrations in EE (EE migrations include CE ones), and paste the diff in a snippet: `git diff v<%= version.to_rc %>-ee..<%= version.stable_branch(ee: true) %> -- db/migrate db/post_migrate` =>
  - [ ] Sync CE, EE, and Omnibus to `dev`
  - [ ] Ensure tests are green on [CE stable branch]
  - [ ] Ensure tests are green on [EE stable branch]
  - [ ] Ensure tests are green on [Omnibus CE stable branch]
  - [ ] Ensure tests are green on [Omnibus EE stable branch]
  - [ ] Make sure to [announce the deployment] on Twitter and GitLab.com
    * With downtime: 1 hour before
    * Without downtime: 15 minutes before
  - [ ] In `#releases`: I'm going to tag `<%= version.to_rc %>`
  - [ ] Tag the `<%= version.to_rc %>` version using the [`release` task]:

        ```sh
        # In the release-tools project:
        bundle exec rake "release[<%= version.to_rc %>]"
        ```
  - [ ] Check that [EE packages are built], [CE packages are built] and appears on `packages.gitlab.com`: [EE & CE](https://packages.gitlab.com/app/gitlab/unstable/search?q=<%= version.to_rc %>)
  - [ ] In `#production`: I'm going to deploy `<%= version.to_rc %>` to staging
        ```sh
        # In the chef-repo project:
        bundle exec rake "deploy[staging, <%= version.to_rc %>.ee.0]"
        ```
  - [ ] Do the [deploy] of [`<%= version.to_rc %>`](https://packages.gitlab.com/gitlab/unstable/packages/ubuntu/xenial/gitlab-ee_<%= version.to_rc %>.ee.0_amd64.deb) to [staging.gitlab.com]
  - [ ] In `#production`: I'm going to deploy `<%= version.to_rc %>` to production
        ```sh
        # In the chef-repo project:
        bundle exec rake "deploy[production, <%= version.to_rc %>.ee.0]"
        ```
  - [ ] Tweet about the deploy, at this point the deploy alert banner on GitLab.com should already be up.
  - [ ] Do the [deploy] of [`<%= version.to_rc %>`](https://packages.gitlab.com/gitlab/unstable/packages/ubuntu/xenial/gitlab-ee_<%= version.to_rc %>.ee.0_amd64.deb) to GitLab.com
  - [ ] Post a [tweet about] the `<%= version.to_rc %>` release:

        ```
        GitLab <%= version.to_rc %> is available: https://packages.gitlab.com/gitlab/unstable
        Use at your own risk. Please link regressions issues from
        LINK_TO_REGRESSION_ISSUE
        ```
- [ ] Create the [regression issue] in the CE issue tracker using the [`regression_issue` task] and bookmark it:

      ```sh
      # In the release-tools project:
      bundle exec rake "regression_issue[<%= version.to_patch %>]"
      ```
- [ ] Prepare the [blog post] using the [`new_release_post` task], in the [`www-gitlab-com` project]:

      ```sh
      # In the www-gitlab-com project:
      bundle exec rake "new_release_post[<%= version.to_minor %>]"
      ```

#### QA

- [ ] Determine QA person and notify this person: MENTION_THIS_PERSON_HERE
- [ ] Do QA and fix anything coming out of it: LINK_TO_QA_ISSUE

### Anytime after RC1 but before 22nd


- [ ] Check that everyone is mentioned on the [blog post] using `@all`:

      ```
      Hello @all, this is the monthly release post that will go out on the 22nd,
      announcing the new GitLab version. Look through it to see if we can make any
      changes and feel free to comment with suggestions or questions!
      ```

      or, if the blog post is still very much a work in progress:

      ```
      Hello @all, this is the merge request for the monthly release post that will
      go out on the 22nd, announcing the new GitLab version. Right now it's all
      boilerplate, but feel free to remind us about things that shouldn't be left
      out!
      ```
- [ ] Ask in `#core` for suggestions about who should be this release's MVP.
  Once chosen, add them to the [blog post] and to the [MVP page], in the
  same merge request
- [ ] Create another RC as needed.

Keep in mind that:

1. After feature freeze only regression and security fixes can be
cherry-picked into `<%= version.stable_branch %>`.
2. Last RC should point to the same commit as the final release.

**Copy-paste the tasks below for any other RCs (be sure to update the RC number).**

```
#### RC2

- [ ] Cherry-pick merge requests labeled [`Pick into Stable`] for the current
  milestone (you can take advantage of the
  [`Pick into Stable` <%= version.to_minor %> merged merge requests] page) into
  the CE `<%= version.stable_branch %>` and EE `<%= version.stable_branch(ee: true) %>`
  branches, respectively.
- Follow the [Creating subsequent RCs] guide for `<%= version.to_rc(2) %>`:
  - [ ] Merge CE `<%= version.stable_branch %>` into EE `<%= version.stable_branch(ee: true) %>` following the [Merging a CE stable branch into its EE counterpart] guide
  - [ ] Check for any problematic migrations in EE (EE migrations include CE ones), and paste the diff in a snippet: `git diff v<%= version.to_rc %>-ee..<%= version.stable_branch(ee: true) %> -- db/migrate db/post_migrate` =>
  - [ ] Sync CE, EE, and Omnibus to `dev`
  - [ ] Ensure tests are green on [CE stable branch]
  - [ ] Ensure tests are green on [EE stable branch]
  - [ ] Ensure tests are green on [Omnibus CE stable branch]
  - [ ] Ensure tests are green on [Omnibus EE stable branch]
  - [ ] Make sure to [announce the deployment] on Twitter and GitLab.com
    * With downtime: 1 hour before
    * Without downtime: 15 minutes before
  - [ ] In `#releases`: I'm going to tag `<%= version.to_rc(2) %>`
  - [ ] Tag the `<%= version.to_rc(2) %>` version using the [`release` task]:

        ```sh
        # In the release-tools project:
        bundle exec rake "release[<%= version.to_rc(2) %>]"
        ```
- [ ] Check that [EE packages are built], [CE packages are built] and appears on `packages.gitlab.com`: [EE & CE](https://packages.gitlab.com/app/gitlab/unstable/search?q=<%= version.to_rc(2) %>)
- [ ] In `#production`: I'm going to deploy `<%= version.to_rc(2) %>` to staging
      ```sh
      # In the chef-repo project:
      bundle exec rake "deploy[staging, <%= version.to_rc(2) %>.ee.0, gitlab/unstable]"
      ```
- [ ] [Deploy] [`<%= version.to_rc(2) %>`](https://packages.gitlab.com/gitlab/unstable/packages/ubuntu/xenial/gitlab-ee_<%= version.to_rc(2) %>.ee.0_amd64.deb) to [staging.gitlab.com]
- [ ] In `#production`: I'm going to deploy `<%= version.to_rc(2) %>` to production
      ```sh
      # In the chef-repo project:
      bundle exec rake "deploy[production, <%= version.to_rc(2) %>.ee.0, gitlab/unstable]"
      ```
- [ ] Tweet about the deploy, at this point the deploy alert banner on GitLab.com should already be up.
- [ ] Do the [deploy] [`<%= version.to_rc(2) %>`](https://packages.gitlab.com/gitlab/unstable/packages/ubuntu/xenial/gitlab-ee_<%= version.to_rc(2) %>.ee.0_amd64.deb) to GitLab.com
- [ ] Post a [tweet about] the `<%= version.to_rc(2) %>` release:

      ```
      GitLab <%= version.to_rc(2) %> is available: https://packages.gitlab.com/gitlab/unstable
      Use at your own risk. Please link regressions issues from
      LINK_TO_REGRESSION_ISSUE
      ```
```



### 22nd before 15:00 UTC:

No new code is added to release that was not included in the last RC.
This way we ensure the release does not introduce new regressions.

- Before 13:00 UTC:
  - [ ] Sync CE, EE, and Omnibus to `dev`
  - [ ] Ensure tests are green on [CE stable branch]
  - [ ] Ensure tests are green on [EE stable branch]
  - [ ] Ensure tests are green on [Omnibus CE stable branch]
  - [ ] Ensure tests are green on [Omnibus EE stable branch]
  - [ ] Make sure to [announce the deployment] on Twitter and GitLab.com
    * With downtime: 1 hour before
    * Without downtime: 15 minutes before
  - [ ] In `#releases`: I'm going to tag `<%= version.to_patch %>`
  - [ ] Tag the `<%= version.to_patch %>` version using the [`release` task]:

        ```sh
        # In the release-tools project:
        bundle exec rake "release[<%= version.to_patch %>]"
        ```
  - [ ] Check that [EE packages are built], [CE packages are built] and appears on `packages.gitlab.com`: [EE](https://packages.gitlab.com/app/gitlab/gitlab-ee/search?q=<%= version.to_patch %>) / [CE](https://packages.gitlab.com/app/gitlab/gitlab-ce/search?q=<%= version.to_patch %>)

- Before 14:00 UTC:
  - [ ] In `#production`: I'm going to deploy `<%= version.to_patch %>` to staging
  - [ ] Do the [deploy] of [`<%= version.to_patch %>`](https://packages.gitlab.com/gitlab/gitlab-ee/packages/ubuntu/xenial/gitlab-ee_<%= version.to_patch %>-ee.0_amd64.deb) to [staging.gitlab.com]
  - [ ] In `#production`: I'm going to deploy `<%= version.to_patch %>` to production
  - [ ] Tweet about the deploy, at this point the deploy alert banner on GitLab.com should already be up.
  - [ ] Do the [deploy] of [`<%= version.to_patch %>`](https://packages.gitlab.com/gitlab/gitlab-ee/packages/ubuntu/xenial/gitlab-ee_<%= version.to_patch %>-ee.0_amd64.deb) to GitLab.com
  - [ ] Create the `<%= version.to_patch %>` version on https://version.gitlab.com
  - [ ] Create the first patch issue using the [`patch_issue` task]:

      ```sh
      # In the release-tools project:
      bundle exec rake "patch_issue[<%= version.next_patch %>]"
      ```

- At 15:00 UTC:
  - [ ] Publish the release [blog post]
  - [ ] Ensure someone tweets about the `<%= version.to_patch %>` release

[regression issue]: LINK_TO_REGRESSION_ISSUE
[blog post]: LINK_TO_WIP_BLOG_POST

[Creating RC1]: https://gitlab.com/gitlab-org/release-tools/blob/master/doc/release-candidates.md#creating-rc1
[CE stable branch]: https://dev.gitlab.org/gitlab/gitlabhq/commits/<%= version.stable_branch %>
[EE stable branch]: https://dev.gitlab.org/gitlab/gitlab-ee/commits/<%= version.stable_branch(ee: true) %>
[Omnibus CE stable branch]: https://dev.gitlab.org/gitlab/omnibus-gitlab/commits/<%= version.stable_branch %>
[Omnibus EE stable branch]: https://dev.gitlab.org/gitlab/omnibus-gitlab/commits/<%= version.stable_branch(ee: true) %>
[announce the deployment]: https://dev.gitlab.org/cookbooks/chef-repo/blob/master/doc/deploying.md#announce-the-deployment
[CE packages are built]: https://dev.gitlab.org/gitlab/omnibus-gitlab/commits/<%= version.stable_branch %>
[EE packages are built]: https://dev.gitlab.org/gitlab/omnibus-gitlab/commits/<%= version.stable_branch(ee: true) %>
[tweet about]: https://dev.gitlab.org/cookbooks/chef-repo/blob/master/doc/deploying.md#announce-that-the-deploy-is-done
[`gitlab/unstable`]: https://packages.gitlab.com/gitlab/unstable
[`new_release_post` task]: https://gitlab.com/gitlab-com/www-gitlab-com/#create-release-blog-post
[`www-gitlab-com` project]: https://gitlab.com/gitlab-com/www-gitlab-com/
[`gitlab/gitlab-ee`]: https://packages.gitlab.com/gitlab/gitlab-ee
[`gitlab/gitlab-ce`]: https://packages.gitlab.com/gitlab/gitlab-ce
[Sync CE, EE, and Omnibus to `dev`]: https://gitlab.com/gitlab-org/release-tools/blob/master/doc/pro-tips.md#add-a-git-pdo-and-a-git-pdog-aliases
[Creating subsequent RCs]: https://gitlab.com/gitlab-org/release-tools/blob/master/doc/release-candidates.md#creating-subsequent-rcs
[GitLab CE into EE]: https://gitlab.com/gitlab-org/release-tools/blob/master/doc/merge-ce-into-ee.md#merging-ce-master-into-ee-master
[Merging a CE stable branch into its EE counterpart]: https://gitlab.com/gitlab-org/release-tools/blob/master/doc/merge-ce-into-ee.md#merging-a-ce-stable-branch-into-its-ee-counterpart
[`Pick into Stable`]: https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CONTRIBUTING.md#changes-for-stable-releases
[`release` task]: https://gitlab.com/gitlab-org/release-tools/blob/master/doc%2Frake-tasks.md#releaseversion
[`patch_issue` task]: https://gitlab.com/gitlab-org/release-tools/blob/master/doc%2Frake-tasks.md#patch_issueversion
[`regression_issue` task]: https://gitlab.com/gitlab-org/release-tools/blob/master/doc%2Frake-tasks.md#regression_issueversion
[MVP page]: https://gitlab.com/gitlab-com/www-gitlab-com/blob/master/source/mvp/index.html
[`Pick into Stable` <%= version.to_minor %> merged merge requests]: https://gitlab.com/groups/gitlab-org/merge_requests?label_name%5B%5D=Pick+into+Stable&milestone_title=<%= version.milestone_name %>&scope=all&sort=id_desc&state=merged
[deploy]: https://dev.gitlab.org/cookbooks/chef-repo/blob/master/doc/deploying.md
[staging.gitlab.com]: https://staging.gitlab.com/
