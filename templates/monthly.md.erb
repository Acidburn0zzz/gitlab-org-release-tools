## First steps

Stable branch should be created after the 7th. The 7th is the last date to reliably get things in.

- [ ] Assign this issue to all the [release managers and trainees](https://about.gitlab.com/release-managers/)
- [ ] Create a new slack channel `<%= Slack::Channel.for(version) %>`
- [ ] Set the channel topic to `RMs: https://about.gitlab.com/release-managers`
- [ ] Invite all current release managers
- [ ] Inside the channel invite trainees to start their onboarding

     ```
     Welcome @TRAINEE_1 and @TRAINEE_2 :wave:
     If you haven't done it already, please start your onboarding issue
     https://gitlab.com/gitlab-org/release/docs/blob/master/quickstart/release-manager.md
     Let us know if you have any questions!
     ```
- [ ] Inside the old release slack channel, notify about `<%= Slack::Channel.for(version) %>`

     ```
     Hello :wave:
     We are starting <%= version.to_minor %> into <%= Slack::Channel.for(version) %>
     Please archive this channel and join <%= Slack::Channel.for(version) %> if interested
     ```
- [ ] Create the <%= PickIntoLabel.for(version) %> group label if it doesn't exist: https://gitlab.com/groups/gitlab-org/labels/new
  - Title: `Pick into <%= version.to_minor %>`
  - Description: ``Merge requests to cherry-pick into the `<%= version.stable_branch %>` branch.``
  - Color: `#00c8ca`
- [ ] Make sure the latest [CE to EE] on `master` branches is merged (it will reduce conflicts in the future). Ask in `#ce-to-ee` when in doubt.
- [ ] Create branch `<%= version.stable_branch %>` from CE `master` manually
- [ ] Create branch `<%= version.stable_branch(ee: true) %>` from EE `master` manually
- [ ] In Omnibus create both `<%= version.stable_branch %>` and `<%= version.stable_branch(ee: true) %>` from `master` manually
- [ ] Merge GitLab CE into EE on stable branches following the [Merging a CE stable branch into its EE counterpart] guide
- [ ] [Sync stable branches](https://gitlab.com/gitlab-org/release/docs/blob/master/general/push-to-multiple-remotes.md) for CE, EE, and Omnibus to `dev`
- [ ] Sync master branches to `dev`, as the CHANGELOG will be automatically updated on master during tagging
- [ ] If needed, sync tags for dependencies (`gitlab-shell`, `gitlab-workhorse`, `gitlab-pages`, `gitaly`) to `dev` (when applicable. Builds should fail if this is needed.)

[CE to EE]: https://gitlab.com/gitlab-org/gitlab-ee/merge_requests?label_name[]=CE+upstream&scope=all&state=opened
[Merging a CE stable branch into its EE counterpart]: https://gitlab.com/gitlab-org/release/docs/blob/master/general/merge-ce-into-ee.md#merging-a-ce-stable-branch-into-its-ee-counterpart

## RC1

- Follow the [Creating RC1] guide:
  - [ ] Create an MR on **CE** master updating the "Installation from Source" guide, creating the "Update" guides
  - [ ] Create an MR on **EE** master creating the "CE to EE" guides
  - [ ] Ensure the above MRs are merged and marked <%= PickIntoLabel.for(version) %>
  - [ ] Create a task list for RC1:

      ```sh
      # In Slack:
      /chatops run release_issue <%= version.to_rc(1) %>
      ```
  - [ ] Link the RC1 issue as a related issue in this issue

[Creating RC1]: https://gitlab.com/gitlab-org/release/docs/blob/master/general/release-candidates.md#creating-rc1

## Subsequent RCs

- [ ] Update the blog post `upgrade barometer` section with the migration types for this release, including the time they took to complete.
- Create additional release candidates as needed:

    ```sh
    # In Slack (update RC number):
    /chatops run release_issue <%= version.to_rc(2) %>
    ```
- [ ] Link any subsequent RCs issues as a related issue in this issue

Keep in mind that:

1. After the feature freeze only regression, security, and documentation fixes should be
   cherry-picked into stable branches.
2. The final RC should point to the same commit as the final release.

## On the first working day after the 7th
- Follow the [Feature freeze RC] guide:
  - [ ] Create an MR on **CE** master updating the `.gitignore`, `.gitlab-ci.yml`, and `Dockerfile` templates
  - [ ] Create an MR on **CE** master updating the dependencies license list
  - [ ] Ensure the above MRs are merged and marked <%= PickIntoLabel.for(version) %>
  - [ ] Merge **CE** master into **EE** master
  - [ ] Integrate changes from master into `<%= version.stable_branch %>`
- [ ] In `#development`:

    ```
    @channel

    `<%= version.stable_branch %>` branch has been created. Everything merged into `master`
    after this point will go into next month's release. Only regression and security fixes
    will be cherry-picked into `<%= version.stable_branch %>`.

    Please ensure that merge requests have the correct milestone (`<%= version.to_minor %>` for this release)
    and the `Pick into <%= version.to_minor %>` label.

    From now on, please follow the "After the 7th" process:
    https://gitlab.com/gitlab-org/gitlab-ce/blob/master/PROCESS.md#after-the-7th
    ```

[Feature freeze RC]: https://gitlab.com/gitlab-org/release/docs/blob/master/general/release-candidates.md#feature-freeze-rc

## Final RC

The final RC should be created on the 21st of the month.

### Before 13:00 UTC

Including changes at this stage requires signoff from the VP of Engineering.

- [ ] Create a task list for the final RC:

    ```sh
    # In Slack (update RC number):
    /chatops run release_issue <%= version.to_rc(22) %>
    ```

### At 15:00 UTC

If the final RC isn't tagged and deployed by this time, notify the
[Distribution Lead][getting help].

### At 20:00 UTC

If the final RC still isn't tagged and deployed by this time, notify the
[VP of Engineering][getting help].

## 22nd: release day

No new code can be added to the release that was not included in the final RC.

- At 08:00 UTC, final release is ready for tagging (Including changes at this stage requires signoff from the [VP of Engineering][getting help]):
  - [ ] Ensure tests are green on [CE stable branch]
  - [ ] Ensure tests are green on [EE stable branch]
  - [ ] Ensure tests are green on [Omnibus CE stable branch]
  - [ ] Ensure tests are green on [Omnibus EE stable branch]
  - [ ] [Sync stable branches](https://gitlab.com/gitlab-org/release/docs/blob/master/general/push-to-multiple-remotes.md) for CE, EE, and Omnibus to `dev`
  - [ ] Sync master branches to `dev`, as the CHANGELOG will be automatically updated on master during tagging

- Before 10:00 UTC:
  - [ ] Tag the `<%= version.to_patch %>` version using the [`release` command]:

        ```sh
        # In Slack:
        /chatops run tag <%= version.to_patch %>
        ```
  - [ ] Check progress of [EE packages build](https://dev.gitlab.org/gitlab/omnibus-gitlab/commits/<%= version.to_omnibus(ee: true) %>) and [CE packages build](https://dev.gitlab.org/gitlab/omnibus-gitlab/commits/<%= version.to_omnibus(ee: false) %>)
  - [ ] Warm up the packages on takeoff by running:
        ```sh
        # In the takeoff project:
        bin/takeoff-deploy -v <%= version.to_patch %>-ee.0 -w
        ```
- Before 12:00 UTC:
  - [ ] Notify #production channel about staging deploy. No need to require confirmation.
  - [ ] On video call, [deploy] `<%= version.to_patch %>` to [staging.gitlab.com]

        ```sh
        # In the takeoff project:
        bin/takeoff-deploy -e gstg -v <%= version.to_patch %>-ee.0
        ```
  - [ ] Notify #production channel about canary deploy. No need to require confirmation.
  - [ ] On video call, [deploy] `<%= version.to_patch %>` to [canary.gitlab.com]

        ```sh
        # In the takeoff project:
        bin/takeoff-deploy -e gprd-cny -v <%= version.to_patch %>-ee.0
        ```
  - [ ] Confirm that there are no errors on canary
    - [canary errors on sentry.gitlap.com](https://sentry.gitlap.com/gitlab/gitlabcom/?query=server_name%3A%22web-cny-01-sv-gprd%22)
    - [canary dashboard](https://dashboards.gitlab.net/d/llfd4b2ik/canary)

  - [ ] Get confirmation from a production team member to deploy production. Use `!oncall prod` if needed to find who's on call. If someone besides the oncall confirms, `@mention` the oncall so they are aware.
  - [ ] Confirm there are no critical alerts on gitlab.com on the [alerting dashboard](https://dashboards.gitlab.net/d/SOn6MeNmk/alerts)
  - [ ] On video call, [deploy] `<%= version.to_patch %>` to GitLab.com

        ```sh
        # In the takeoff project:
        bin/takeoff-deploy -e gprd -v <%= version.to_patch %>-ee.0
        ```
- At 14:30 UTC:
  - [ ] Publish the packages via ChatOps:
    ```
    # In Slack:
    /chatops run publish <%= version.to_patch %>
    ```
  - Make sure that neither packages nor the blog post get published early without approval by the marketing team
- At 15:00 UTC:
  - [ ] Verify that packages appear on `packages.gitlab.com`: [EE](https://packages.gitlab.com/app/gitlab/gitlab-ee/search?q=<%= version.to_patch %>) / [CE](https://packages.gitlab.com/app/gitlab/gitlab-ce/search?q=<%= version.to_patch %>)
  - [ ] Verify that Docker images appear on `hub.docker.com`: [EE](https://hub.docker.com/r/gitlab/gitlab-ee/tags) / [CE](https://hub.docker.com/r/gitlab/gitlab-ce/tags)
  - [ ] Create the `<%= version.to_patch %>` version on [version.gitlab.com](https://version.gitlab.com/versions/new?version=<%= version.to_patch %>)
  - [ ] Ensure someone tweets about the `<%= version.to_patch %>` release in the `#releases` channel

[CE stable branch]: https://gitlab.com/gitlab-org/gitlab-ce/commits/<%= version.stable_branch %>
[EE stable branch]: https://gitlab.com/gitlab-org/gitlab-ee/commits/<%= version.stable_branch(ee: true) %>
[Omnibus CE stable branch]: https://gitlab.com/gitlab-org/omnibus-gitlab/commits/<%= version.stable_branch %>
[Omnibus EE stable branch]: https://gitlab.com/gitlab-org/omnibus-gitlab/commits/<%= version.stable_branch(ee: true) %>
[announce the deployment]: https://gitlab.com/gitlab-org/takeoff/blob/master/doc/announce-a-deployment.md
[`release` command]: https://gitlab.com/gitlab-org/release-tools/blob/master/doc/chatops.md#tag
[deploy]: https://gitlab.com/gitlab-org/takeoff#deploying-gitlab
[staging.gitlab.com]: https://staging.gitlab.com/
[getting help]: https://gitlab.com/gitlab-org/release/docs/blob/master/general/monthly.md#getting-help

/milestone %"<%= version.to_minor %>"
